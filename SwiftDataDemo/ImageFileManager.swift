//
//  FilePathManager.swift
//  SwiftDataDemo
//
//  Created by sako0602 on 2024/11/02.
//

import Foundation
import SwiftUI

struct ImageFileManager {
    
    //„ÄÄÊõ∏„ÅçËæº„Åø
    func writingToFile(shopName: String,uiImage: UIImage) -> String {
        guard let documentURL = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first else {
            fatalError("„Éâ„Ç≠„É•„É°„É≥„Éà„Åå„Å™„ÅÑ")
        }
        
        //„Éâ„Ç≠„É•„É°„É≥„ÉàURL„Å´„Éï„Ç°„Ç§„É´„ÅÆÂêçÂâç„ÇíÁπã„Åí„Çã
        let fileURL = documentURL.appendingPathComponent(shopName)
        
        //ÁîªÂÉè„Çí„Éá„Éº„Çø„Å∏Â§âÊèõ
        let jpegImageData = uiImage.jpegData(compressionQuality: 0.8)
        
        do {
            // „Éï„Ç°„Ç§„É´„Å´jpeg„ÅÆ„Éá„Éº„Çø„ÇíÊõ∏„ÅçËæº„ÇÄ
            try jpegImageData!.write(to: fileURL, options: .atomic)
        } catch {
            print("#Error:\(error)")
        }
        print("üçî„Éï„Ç°„Ç§„É´„Éë„Çπ",fileURL.absoluteString)
        return fileURL.absoluteString
    }
    
    // Ë™≠„Åø„Åì„Åø
    func readFromFile(shopName: String) -> UIImage {
        //documentURL„ÇíÂèñÂæó„Åô„Çã
        do {
            // „Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆURL„ÇíÂèñÂæó„Åô„Çã
            guard let documentURL = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first else {
                fatalError("„Éï„Ç©„É´„ÉÄURLÂèñÂæó„Ç®„É©„Éº")
            }
            
            //ÂèñÂæó„Åó„Å¶„Åç„Åü„ÅÑ„Éï„Ç°„Ç§„É´„ÅÆURL„ÇíÂèñÂæó„Åô„Çã
            let fileURL = documentURL.appendingPathComponent(shopName)
            
            //ÂèñÂæó„Åó„Å¶„Åç„ÅüURLÂûã„ÇíDataÂûã„Å∏Â§âÊèõ„Åô„Çã
            let imageData = try Data(contentsOf: fileURL)
            
            //
            guard let uiImage = UIImage(data: imageData) else {
                fatalError("„Éá„Éº„Çø„ÇíÁîªÂÉè„Å∏Â§âÊèõ„Åô„Çã„ÅÆ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ")
            }
            
            return uiImage
        } catch {
            fatalError("ÁîªÂÉè„Éá„Éº„Çø„ÅÆÁîüÊàê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü")
        }
    }
    
    
    func getShopDirectory(for shopName: String) -> URL? {
        let fileManager = FileManager.default
        guard let documentsURL = fileManager.urls(for: .documentDirectory, in: .userDomainMask).first else {
            return nil
        }
        let shopURL = documentsURL.appendingPathComponent(shopName)
        
        // „Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ‰ΩúÊàê
        if !fileManager.fileExists(atPath: shopURL.path) {
            do {
                try fileManager.createDirectory(at: shopURL, withIntermediateDirectories: true, attributes: nil)
            } catch {
                print("Failed to create shop directory: \(error)")
                return nil
            }
        }
        return shopURL
    }
    
    func saveGoodsImageToShopDirectory(_ image: UIImage, fileName: String, shopName: String) -> String? {
        guard let imageData = image.jpegData(compressionQuality: 0.8),
              let shopURL = getShopDirectory(for: shopName) else {
            return nil
        }
        
        let fileURL = shopURL.appendingPathComponent(fileName)
        
        do {
            try imageData.write(to: fileURL)
            return fileURL.lastPathComponent  // „Éï„Ç°„Ç§„É´Âêç„ÇíËøî„Åô
        } catch {
            print("Failed to save image to shop directory: \(error)")
            return nil
        }
    }
    
}
